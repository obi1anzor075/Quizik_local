@using PresentationLayer.ViewModels
@using PresentationLayer.Controllers
@using DataAccessLayer.Models
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Identity
@inject PresentationLayer.Utilities.SharedViewLocalizer SharedLocalizer
@inject UserManager<User> UserManager
@model RegisterVM


<head>
    <link href="~/css/chat.css" rel="stylesheet" />
    <link href="~/css/SelelctMode.css" rel="stylesheet" />
    <!--Link Google Fonts for icons-->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0&icon_names=arrow_forward" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
</head>
<div class="container">
    <header>
        <div class="head__mode_part">
            <div class="head__mode_left">
                <form asp-controller="Home" asp-action="SetLanguage" method="post" class="language-selector" style="display:none;">
                    <input type="hidden" name="culture" id="selectedLanguage" value="ru-RU">
                    <input type="hidden" name="returnUrl" value="@Context.Request.Path" />

                    <!-- Кнопка с текущим флагом -->
                    <div class="selected-flag" id="currentFlag" onclick="toggleDropdown()"
                    style="background-image: url(https://hatscripts.github.io/circle-flags/flags/ru.svg);">
                    </div>

                    <!-- Выпадающее меню -->
                    <div class="flag-dropdown" id="flagDropdown">
                        <img src="https://hatscripts.github.io/circle-flags/flags/ru.svg" alt="Русский" onclick="selectLanguage('ru-RU', this)">
                        <img src="https://hatscripts.github.io/circle-flags/flags/us.svg" alt="English" onclick="selectLanguage('en-US', this)">
                        <img src="https://hatscripts.github.io/circle-flags/flags/cn.svg" alt="中文" onclick="selectLanguage('zh-CN', this)">
                    </div>
                </form>
                @if (User.IsInRole("Admin"))
                {
                    <div id="music-circle" class="btn btn-raised">
                        <i class="material-icons">
                            <a asp-controller="Admin" asp-action="AddQuiz"><img class="music-icon" src="~/img/add-circle-svgrepo-com.svg" alt="Alternate Text" style="width:45px;"/></a>
                        </i>
                    </div>
                }
            </div>
                <div class="logo__img">
                <img src="~/img/logo.svg" class="main__logo_landing" alt="Логотип Quizik" />
                </div>
                <div class="head__mode_right">
                <div class="google__logout profile-selector">
                    <!--a class="google__logout_btn" asp-controller="Home" asp-action="Logout">Localizer["LogoutButton"]</a>-->
                    <!-- Круглый аватар, подтягивается из БД, если нет – используется аватар по умолчанию -->
                    <img src="@ViewBag.ProfilePicture" alt="Alternate Text" class="profile-photo" />
                    <!-- Выпадающее меню -->
                    <div class="profile-menu">
                        <a asp-action="Profile">Профиль</a>
                        <a asp-action="Logout">Выход</a>
                    </div>
                    </div>
                    <div id="body">
                        <div id="chat-circle" class="btn btn-raised">
                            <div id="chat-overlay"></div>
                            <i class="material-icons">
                                <svg width="42px" height="42px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M22 5C22 6.65685 20.6569 8 19 8C17.3431 8 16 6.65685 16 5C16 3.34315 17.3431 2 19 2C20.6569 2 22 3.34315 22 5Z" fill="#1C274C" />
                                    <path opacity="0.5" d="M15.2347 2.53476C14.2201 2.1881 13.132 2 12 2C6.47715 2 2 6.47715 2 12C2 13.5997 2.37562 15.1116 3.04346 16.4525C3.22094 16.8088 3.28001 17.2161 3.17712 17.6006L2.58151 19.8267C2.32295 20.793 3.20701 21.677 4.17335 21.4185L6.39938 20.8229C6.78393 20.72 7.19121 20.7791 7.54753 20.9565C8.88836 21.6244 10.4003 22 12 22C17.5228 22 22 17.5228 22 12C22 10.868 21.8119 9.77987 21.4652 8.76526C20.7572 9.22981 19.9101 9.5 19 9.5C16.5147 9.5 14.5 7.48528 14.5 5C14.5 4.08987 14.7702 3.24284 15.2347 2.53476Z" fill="#1C274C" />
                                </svg>
                            </i>
                        </div>
                        
                        <div class="chat-box">
                            <div class="chat-box-header ">
                                Чат
                                <span class="chat-box-toggle">
                                    <i class="material-icons">
                                        <svg width="32px" height="32px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12ZM8.96963 8.96965C9.26252 8.67676 9.73739 8.67676 10.0303 8.96965L12 10.9393L13.9696 8.96967C14.2625 8.67678 14.7374 8.67678 15.0303 8.96967C15.3232 9.26256 15.3232 9.73744 15.0303 10.0303L13.0606 12L15.0303 13.9696C15.3232 14.2625 15.3232 14.7374 15.0303 15.0303C14.7374 15.3232 14.2625 15.3232 13.9696 15.0303L12 13.0607L10.0303 15.0303C9.73742 15.3232 9.26254 15.3232 8.96965 15.0303C8.67676 14.7374 8.67676 14.2625 8.96965 13.9697L10.9393 12L8.96963 10.0303C8.67673 9.73742 8.67673 9.26254 8.96963 8.96965Z" fill="#1C274C" />
                                        </svg>
                                    </i>
                                </span>
                            </div>
                            <div class="chat-box-body ">
                                
                                <div class="chat-box-overlay ">
                                </div>
                                <div class="chat-logs" id="chat-logs">
                                    


                                       
                                </div>
                            </div><!--chat-log -->
                            <div id="chat" class="chat-input">
                                <form>
                                    <input type="text" id="chat-input" placeholder="Send a message..." />
                                    <button type="submit" class="chat-submit" id="chat-submit"><i class="material-icons"><svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" stroke="#5A5EB9"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M11.5003 12H5.41872M5.24634 12.7972L4.24158 15.7986C3.69128 17.4424 3.41613 18.2643 3.61359 18.7704C3.78506 19.21 4.15335 19.5432 4.6078 19.6701C5.13111 19.8161 5.92151 19.4604 7.50231 18.7491L17.6367 14.1886C19.1797 13.4942 19.9512 13.1471 20.1896 12.6648C20.3968 12.2458 20.3968 11.7541 20.1896 11.3351C19.9512 10.8529 19.1797 10.5057 17.6367 9.81135L7.48483 5.24303C5.90879 4.53382 5.12078 4.17921 4.59799 4.32468C4.14397 4.45101 3.77572 4.78336 3.60365 5.22209C3.40551 5.72728 3.67772 6.54741 4.22215 8.18767L5.24829 11.2793C5.34179 11.561 5.38855 11.7019 5.407 11.8459C5.42338 11.9738 5.42321 12.1032 5.40651 12.231C5.38768 12.375 5.34057 12.5157 5.24634 12.7972Z" stroke="#5A5EB9" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path> </g></svg></i></button>
                                </form>
                            </div>
                        </div>
                            
                    </div>
                </div>
            </div>
    </header>
        </div>
<main>
    <div class="container__mode">
        <!-- Mode buttons (translated) -->
        <div class="carousel_container swiper">
            <div class="card-wrapper">
                <ul class="card-list swiper-wrapper">
                    <li class="card-item swiper-slide" data-swiper-autoplay="2000">
                        <a id="cardSlider" type="button" data-toggle="modal" data-target="#pddModal" class="card-link">
                            <h2 class="card-title">ПДД</h2>
                            <img src="~/img/game-modes/PDD.svg" alt="Игра по правилам дорожного движения" class="card-image">
                        </a>
                    </li>
                    <li class="card-item swiper-slide" data-swiper-autoplay="2000">
                        <a id="cardSlider" type="button" data-toggle="modal" data-target="#geographyModal" class="card-link">
                            <h2 class="card-title">География</h2>
                            <img src="~/img/game-modes/Geography.png" alt="Игра по географии" class="card-image">
                        </a>
                    </li>
                    <li class="card-item swiper-slide" data-swiper-autoplay="2000">
                        <a id="cardSlider" type="button" data-toggle="modal" data-target="#WWIImodal" class="card-link">
                            <h2 class="card-title">Вторая мировая война</h2>
                            <img src="~/img/game-modes/WWII.png" alt="Игра по Второй мировой войне" class="card-image">
                        </a>
                    </li>
                </ul>

                <div class="swiper-pagination"></div>
                <div class="swiper-button-prev"></div>
                <div class="swiper-button-next"></div>
            </div>
        </div>
    </div>
</main>

<!-- Подключение jQuery-->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js "></script>
<!--Для анимации чата-->
<script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.12/signalr.min.js" ></script>
<script src="~/js/swiper.js"></script>
<script>
        $(document).ready(function () {
            // Установка соединения с хабом SignalR
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/gameHub") // Укажите URL вашего хаба SignalR
                .build();

            connection.start().then(async function () {
                console.log("SignalR connection established.");

                let userName = '';

                try {
                    // Получение имени пользователя
                    const response = await fetch('/Home/GetUserName');
                    const data = await response.json();
                    userName = data.userName;

                    if (userName) {
                        console.log("Retrieved user name: " + userName);
                        await localStorage.setItem('userName', userName);
                        await joinChat(userName);
                    } else {
                        console.log("User name not found in cookies.");
                    }
                } catch (error) {
                    console.error('Error fetching user name:', error);
                }

            }).catch(function (err) {
                console.error(err.toString());
            });


            // Функция для присоединения к чату
            function joinChat(userName) {
                var connectionInfo = {
                    userName: userName,
                    chatRoom: "Global" // Укажите нужную чат-комнату
                };

                connection.invoke("JoinChat", connectionInfo).then(function () {
                    $(".chat-box").show('scale');
                    $(".chat-log").hide('scale');
                    $("#chat-circle").hide(); // Скрыть chat circle при показе chat box

                    // Отправка сообщения "добро пожаловать"
                }).catch(function (err) {
                    console.error(err.toString());
                });
            }



            // Функция для отправки сообщения
            function sendMessage(userName, message) {
                connection.invoke("SendMessage", userName, message).then(function () {
                    @*
                    console.log("Message sent.");
                *@
                }).catch(function (err) {
                    console.error(err.toString());
                });
            }

            // Список случайных аватаров
            const randomAvatars = [
                '/img/chat-logo/logo1.svg',
                '/img/chat-logo/logo2.svg',
                '/img/chat-logo/logo3.svg',
                '/img/chat-logo/logo4.svg'
            ];

            // Функция для генерации или получения сохраненного аватара
            function getAvatar(userName) {
                let avatar = localStorage.getItem(`avatar_${userName}`);
                if (!avatar) {
                    avatar = generateAvatar(userName);
                    localStorage.setItem(`avatar_${userName}`, avatar);
                }
                return avatar;
            }

            // Функция для генерации аватара
            function generateAvatar(userName) {
                if (userName === 'Quizik') {
                return '/img/chat-logo/Admin-logo.webp'; // Специальный аватар для Quizik
                } else {
                    const randomIndex = Math.floor(Math.random() * randomAvatars.length);
                    return randomAvatars[randomIndex];
                }
            }

            // Функция для генерации HTML кода сообщения
            function generateMessageHTML(userName, message) {
                const avatarSrc = getAvatar(userName);

                return '<div class="chat-msg">' +
                    '<span class="msg-avatar">' +
                    '<img class="avatar-img" src="' + avatarSrc + '" alt="avatar">' +
                    '</span>' +
                    '<div class="cm-msg-text"><strong>' + userName + ':</strong> ' + message + '</div>' +
                    '</div>';
            }



            // Переменные для отслеживания состояния chat box и chat log
            var chatCircle = $("#chat-circle");
            var chatLog = $(".chat-log");
            var chatBox = $(".chat-box");
            var chatBoxToggle = $(".chat-box-toggle");
            var chatLogToggle = $(".chat-log-toggle");

            // Показать chat log при клике на chat circle
            chatCircle.click(function () {
                chatLog.toggle('scale');
            });

            // Закрытие chat log при клике на toggle
            chatLogToggle.click(function () {
                chatLog.toggle('scale');
            });

            // Закрытие chat box при клике на toggle
            chatBoxToggle.click(function () {
                chatBox.toggle('scale', function () {
                    chatCircle.show('scale'); // Показать chat circle после скрытия chat box
                });
            });
            // Отправка сообщения из chat box
            $("#chat-submit").click(async function (e) {
                e.preventDefault();
                var message = $("#chat-input").val();
                var userName = localStorage.getItem('userName');

                if (message.trim() !== '') {
                    await sendMessage(userName, message);
                    $("#chat-input").val('');

                    // Перемещение вниз чата с использованием requestAnimationFrame
                    requestAnimationFrame(function () {
                        const chat = document.getElementById("chat-logs");
                        chat.scrollTop = chat.scrollHeight;
                    });
                }
            });

            // Обработка получения сообщения от сервера
            connection.on("ReceiveMessage", function (userName, message) {
                $(".chat-logs").append(generateMessageHTML(userName, message));

                // Перемещение вниз чата при получении нового сообщения
                requestAnimationFrame(function() {
                    const chat = document.getElementById("chat-logs");
                    chat.scrollTop = chat.scrollHeight;
                });
            });
            // Обработчик событий для chat circle и chat box toggle
            $("#chat-circle").click(function () {
                chatCircle.hide('scale');
                chatBox.show('scale');
            });

            $(".chat-box-toggle").click(function () {
                chatBox.hide('scale', function () {
                    chatCircle.show('scale'); // Показать chat circle после скрытия chat box
                });
            });
        });


        $(function () {
            $("#chat-submit").click(function (e) {
                e.preventDefault();
                var msg = $("#chat-input").val();
                if (msg.trim() == '') {

                    return false;
                }
            });

            $(document).delegate(".chat-btn", "click", function () {
                var value = $(this).attr("chat-value");
                var name = $(this).html();
                $("#chat-input").attr("disabled", false);
                generate_message(name, 'self');
            });
        });

        function setUserNameCookie(userName) {
            // Set the userName cookie
            Cookies.set('userName', userName, { expires: 7 }); // Expires in 7 days
        }

    // Reset counters when the back button is clicked
    document.getElementById("cardSlider").addEventListener("click", function () {
        fetch('/Game/ResetCounters')
            .catch(error => {
                console.error('Error:', error);
            });
    });

    </script>

<script>
    // Открытие/закрытие выпадающего меню при клике на аватар
    document.querySelector('.profile-selector').addEventListener('click', function (e) {
        const menu = document.querySelector('.profile-menu');
        menu.style.display = (menu.style.display === 'flex') ? 'none' : 'flex';
        e.stopPropagation(); // предотвращаем закрытие при клике внутри
    });

    // Закрытие меню при клике вне его области
    document.addEventListener('click', function () {
        const menu = document.querySelector('.profile-menu');
        if (menu) {
            menu.style.display = 'none';
        }
    });
</script>


    @*Скрипты для переключателя языков*@
<script>
    // Получение выбранного языка из Cookie
    document.addEventListener("DOMContentLoaded", function () {
        console.log("DOM загружен!");

        // Получаем .AspNetCore.Culture из cookie
        const cookies = document.cookie.split('; ').find(row => row.startsWith('.AspNetCore.Culture'));

        if (cookies) {
            const cookieValue = cookies.split('=')[1];
            const selectedCookie = decodeURIComponent(cookieValue);
            console.log("Cookie найдено:", selectedCookie);

            // Разбираем строку cookie (c=en-US|uic=en-US)
            const parts = selectedCookie.split('|');
            const culturePart = parts.find(part => part.startsWith('c='));

            if (culturePart) {
                const cultureValue = culturePart.split('=')[1];
                console.log("Выбранный язык:", cultureValue);

                // Устанавливаем текущий флаг
                const currentFlag = document.getElementById("currentFlag");
                const flagMap = {
                    "ru-RU": "https://hatscripts.github.io/circle-flags/flags/ru.svg",
                    "en-US": "https://hatscripts.github.io/circle-flags/flags/us.svg",
                    "zh-CN": "https://hatscripts.github.io/circle-flags/flags/cn.svg"
                };

                if (flagMap[cultureValue]) {
                    currentFlag.style.backgroundImage = `url(${flagMap[cultureValue]})`;
                    document.getElementById("selectedLanguage").value = cultureValue;
                    console.log("Установлен флаг:", flagMap[cultureValue]);
                } else {
                    console.warn("Неизвестный язык в cookie:", cultureValue);
                }
            } else {
                console.warn("Не удалось найти 'c=' в cookie:", cookieValue);
            }
        } else {
            console.warn("Cookie .AspNetCore.Culture не найдено!");
        }
    });
</script>
<script>
    function toggleDropdown() {
        document.getElementById('flagDropdown').classList.toggle('show');
    }

    function selectLanguage(lang, element) {
        document.getElementById('selectedLanguage').value = lang;
        document.getElementById('currentFlag').style.backgroundImage = element.style.backgroundImage;
        document.querySelector(".language-selector").submit();
    }

    // Закрыть выпадающий список при клике вне его
    document.addEventListener("click", function (event) {
        if (!event.target.closest(".language-selector")) {
            document.getElementById('flagDropdown').classList.remove('show');
        }
    });
</script>


    <script src="~/js/site.js"></script>
<!-- Модальное окно для ПДД -->
<div class="modal fade" id="pddModal" tabindex="-1" role="dialog" aria-labelledby="pddLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" role="document">
        <div class="modal-content game-modal">
            <div class="modal-header">
                <h5 class="modal-title center" id="pddModalLabel">Добро пожаловать! Вы выбрали викторину на тему: "ПДД"</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Тест по истории Второй мировой войны позволит вам проверить свои знания о событиях, сражениях, лидерах и ключевых моментах этого важного периода в истории человечества.</p>
                <p>Викторина охватывает такие темы, как даты и факты, крупнейшие битвы, знаковые операции, а также лидеры и страны, сыгравшие ключевую роль в конфликте. Вы узнаете интересные подробности о стратегии, тактике и влиянии войны на дальнейшую историю.</p>
                <p>Готовы окунуться в историю Второй мировой войны и проверить, насколько хорошо вы разбираетесь в этом сложном и значимом периоде?</p>
            </div>
            <div class="modal-footer align-center">
                <a class="button-confirm button button__play easy" asp-controller="SelectMode" asp-action="EasyPDD">Просто</a>
                <a class="button-confirm button button__play hard" asp-controller="SelectMode" asp-action="HardPDD">Сложно</a>
                <a class="button-confirm button button__play duel" asp-controller="SelectMode" asp-action="DuelPDD">Дуэль</a>
            </div>
        </div>
    </div>
</div>

<!-- Модальное окно для Географии -->
<div class="modal fade" id="geographyModal" tabindex="-1" role="dialog" aria-labelledby="geographyLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" role="document">
        <div class="modal-content game-modal">
            <div class="modal-header">
                <h5 class="modal-title center" id="geographyModalLabel">Добро пожаловать! Вы выбрали викторину на тему: "География"</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Тест по географии поможет вам проверить и расширить знания о нашей планете, её странах, столицах, природных чудесах и культурных особенностях.</p>
                <p>Викторина охватывает такие темы, как столицы стран, уникальные географические объекты, природные чудеса и интересные факты о городах и странах мира.</p>
                <p>Готовы отправиться в путешествие по миру и проверить свои знания о географии?</p>
            </div>
            <div class="modal-footer align-center">
                <a class="button-confirm button button__play easy" asp-controller="SelectMode" asp-action="EasyGeography">Просто</a>
                <a class="button-confirm button button__play hard" asp-controller="SelectMode" asp-action="HardGeography">Сложно</a>
                <a class="button-confirm button button__play duel" asp-controller="SelectMode" asp-action="DuelGeography">Дуэль</a>
            </div>
        </div>
    </div>
</div>

<!-- Модальное окно для WWII -->
<div class="modal fade" id="WWIImodal" tabindex="-1" role="dialog" aria-labelledby="WWIILabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" role="document">
        <div class="modal-content game-modal">
            <div class="modal-header">
                <h5 class="modal-title center" id="WWIIModalLabel">Добро пожаловать! Вы выбрали викторину на тему: "Вторая мировая война"</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Тест по истории Второй мировой войны позволит вам проверить свои знания о событиях, сражениях, лидерах и ключевых моментах этого важного периода в истории человечества.</p>
                <p>Викторина охватывает такие темы, как даты и факты, крупнейшие битвы, знаковые операции, а также лидеры и страны, сыгравшие ключевую роль в конфликте. Вы узнаете интересные подробности о стратегии, тактике и влиянии войны на дальнейшую историю.</p>
                <p>Готовы окунуться в историю Второй мировой войны и проверить, насколько хорошо вы разбираетесь в этом сложном и значимом периоде?</p>
            </div>
            <div class="modal-footer align-center">
                <a class="button-confirm button button__play easy" asp-controller="SelectMode" asp-action="EasyWWII">Просто</a>
                <a class="button-confirm button button__play hard" asp-controller="SelectMode" asp-action="HardWWII">Сложно</a>
                <a class="button-confirm button button__play duel" asp-controller="SelectMode" asp-action="DuelWWII">Дуэль</a>
            </div>
        </div>
    </div>
</div>
